""" Tests for data loading """

# Generated by CodiumAI

import pytest
import gluonts

class TestDataLoading:
    """ Tests for data loading """
    
    def test_load_dataset_successfully(self):
        """ Load dataset successfully """
        from datasets import load_dataset
        dataset = load_dataset('Salesforce/cloudops_tsf', 'azure_vm_traces_2017')
        assert dataset is not None

    
    def test_dataset_contains_expected_features(self):
        """ Dataset contains expected features """
        from datasets import load_dataset
        dataset = load_dataset('Salesforce/cloudops_tsf', 'azure_vm_traces_2017')
        assert 'start' in dataset['train_test'].features
        assert 'target' in dataset['train_test'].features
        assert 'item_id' in dataset['train_test'].features
        assert 'feat_static_cat' in dataset['train_test'].features
        assert 'feat_static_real' in dataset['train_test'].features
        assert 'past_feat_dynamic_real' in dataset['train_test'].features

    
    def test_dataset_has_expected_number_of_rows(self):
        """ Dataset has expected number of rows """
        from datasets import load_dataset
        dataset = load_dataset('Salesforce/cloudops_tsf', 'azure_vm_traces_2017')
        assert len(dataset['train_test']) == 17568

    
    def test_dataset_is_empty(self):
        """ Dataset is empty """
        from datasets import load_dataset
        dataset = load_dataset('Salesforce/cloudops_tsf', 'azure_vm_traces_2017')
        assert len(dataset['train_test']) == 0

    
    def test_dataset_is_corrupted(self):
        """ Dataset is corrupted """
        from datasets import load_dataset
        dataset = load_dataset('Salesforce/cloudops_tsf', 'azure_vm_traces_2017')
        # Simulate a corrupted dataset by modifying a feature
        dataset['train_test']['start'][0] = None
        assert dataset['train_test']['start'][0] is None

    
    def test_dataset_file_is_missing(self):
        """ Dataset file is missing """
        from datasets import load_dataset
        with pytest.raises(FileNotFoundError):
            dataset = load_dataset('Salesforce/cloudops_tsf', 'missing_dataset')